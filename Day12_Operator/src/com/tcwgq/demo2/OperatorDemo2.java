package com.tcwgq.demo2;

/**
 * <<, >>, >>>:
 *  <<:左移，空位补0，被移除的高位丢弃。
 *  >>:右移，被移位的二进制最高位是0，右移后，空缺位补0，最高位是1，左边补齐1。
 * >>>:无符号右移，被移位二进制最高位无论是0或者是1，空缺位都用0补。
 */
public class OperatorDemo2 {
	public static void main(String[] args) {
		byte b1 = 3;
		System.out.println(b1 << 1);// 3 * 2^1
		System.out.println(b1 << 2);// 3 * 2^2
		System.out.println(b1 << 3);// 3 * 2^3
		System.out.println("------------");
		byte b2 = 3;
		System.out.println(b2 >> 1);//3 / 2^1 = 1
		System.out.println(b2 >> 2);//3 / 2^2 = 0
		System.out.println(b2 >> 3);//3 / 2^3 = 0
		System.out.println("-------------");
		byte b3 = 24;
		System.out.println(b3 >> 1);// 24 / 2^1 = 12
		System.out.println(b3 >> 2);// 24 / 2^2 = 6
		System.out.println(b3 >> 3);// 24 / 2^4 = 3
		System.out.println("-------------");
		
		System.out.println(24 >> 2);// 24 / 2^2
		System.out.println(24 >>> 2);// 24 / 2^2
		System.out.println(-24 >>> 2);
	}
	/*
	       00000011
	      000000110,左移1位
	     0000001100,左移2位
        00000011000,左移3位
        
        00000011
         00000011,右移1位,00000001=1
          00000011,右移2位,00000000=0
           00000011,右移3位,00000000=0
   24:
        原码：00000000,00000000,00000000,00011000
        反码：11111111,11111111,11111111,11100111
        补码：11111111,11111111,11111111,11101000
        在补码的基础下右移：
         补码：11111111,11111111,11111111,11101000
         111111111,11111111,11111111,1110100(0)
         1111111111,11111111,11111111,111010(00)
         11111111111,11111111,11111111,11101(000)
         
         补码： 11111111111,11111111,11111111,111010
         反码： 11111111111,11111111,11111111,111001
         原码： 00000000000,00000000,00000000,000110=6
         
         -24的补码：
         补码：11111111,11111111,11111111,11101000
         0011111111,11111111,11111111,111010(00)=1073741818
	 */

}
